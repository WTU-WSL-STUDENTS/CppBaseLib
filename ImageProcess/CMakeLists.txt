cmake_minimum_required(VERSION 3.0.0)
project(CppCommon VERSION 0.1.0)
set(CMAKE_CXX_STANDARD 17)
if (POLICY CMP0025)
  cmake_policy(SET CMP0025 NEW)
endif()
if (POLICY CMP0054)
  cmake_policy(SET CMP0054 NEW)
endif()

set(RELEASE_PATH ../Build/bin)
set(Lib_Path ../Build/lib)
if     (CMAKE_SYSTEM_NAME MATCHES "Linux")
    add_definitions(-D__LINUX)
elseif (CMAKE_SYSTEM_NAME MATCHES "Windows")
    add_definitions(-D__WINDOWS)
elseif (CMAKE_SYSTEM_NAME MATCHES "FreeBSD")
    add_definitions(-D__FREE_BSD)
else ()
    message(STATUS "other platform: ${CMAKE_SYSTEM_NAME}")
endif (CMAKE_SYSTEM_NAME MATCHES "Linux")

if     ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel")
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
    if(CMAKE_CL_64)
        add_definitions(-DMSVC_64) 
        set(Path_Suffix x64)
    else()
        add_definitions(-DMSVC_32)
        set(Path_Suffix x86)
    endif()
endif()

set(RELEASE_PATH    bin/${Path_Suffix})
set(LIB_Path        lib/${Path_Suffix})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG 	../${RELEASE_PATH})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE 	../${RELEASE_PATH})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG 	../${LIB_Path})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE 	../${LIB_Path})


include_directories(../Math/include)

option(ENABLE_GENRATE_PDB "option for genrate pdb file" ON)
if(ENABLE_GENRATE_PDB)
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Zi")
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF")
    set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF")
endif()
option(BUILD_3RDPART "option for debug" ON)
if( BUILD_3RDPART )
    add_subdirectory(thirdparty)
endif()
add_subdirectory(unittests)
